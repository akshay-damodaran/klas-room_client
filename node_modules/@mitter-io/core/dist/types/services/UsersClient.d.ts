import { TypedAxiosInstance } from 'restyped-axios';
import { MitterAxiosInterceptionHost } from '../Mitter';
import { User } from '@mitter-io/models';
export declare const UsersPaths: {
    GetMe: string;
    GetUser: string;
    GetMyScreenName: string;
    GetUsersScreenName: string;
};
export interface UsersApi {
    '/v1/users/me': {
        GET: {
            response: User;
        };
    };
    '/v1/users/:userId': {
        GET: {
            params: {
                userId: string;
            };
            response: User;
        };
    };
    '/v1/users': {
        POST: {
            response: {
                identifier: string;
            };
            body: User;
        };
    };
}
export declare const usersClientGenerator: (mitterAxiosInterceptionHost: MitterAxiosInterceptionHost) => TypedAxiosInstance<UsersApi>;
export declare class UsersClient {
    private mitterAxiosInterceptionHost;
    private usersAxiosClient;
    constructor(mitterAxiosInterceptionHost: MitterAxiosInterceptionHost);
    getUser(userId: string): Promise<User>;
    createUser(user: User): Promise<{
        identifier: string;
    }>;
}
