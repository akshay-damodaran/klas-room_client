import { MessagingPipelineDriver, PipelineSink, PipelineDriverInitialization, Mitter, BasePipelineSink } from '@mitter-io/core';
import { DeliveryEndpoint } from '@mitter-io/models';
export default class WebSocketPipelineDriver implements MessagingPipelineDriver {
    private activeSocket;
    private pipelineSink;
    private connectionTime;
    endpointRegistered(pipelineSink: PipelineSink, userDeliveryEndpoint: DeliveryEndpoint): void;
    getDeliveryEndpoint(): Promise<DeliveryEndpoint | undefined>;
    halt(): void;
    initialize(mitter: Mitter): PipelineDriverInitialization;
    pipelineSinkChanged(pipelineSink: BasePipelineSink): void;
    private processMessage;
}
